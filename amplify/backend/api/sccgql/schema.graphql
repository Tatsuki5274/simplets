type ApprovalStatus #承認ステータス
@model
@auth(
  rules: [
    {allow: groups, groups: ["Admin"]}
    {allow: private, operations: [read]}
    {allow: private, provider: iam, operations:[read]}
  ]
)
{
  id: ID!
  no: Int #ステータスNo
  name: String! #名称
}

type Company #会社
@model
@auth(
  rules: [
    {allow: groups, groups: ["Admin"]}
    {allow: private, operations: [read]}
    {allow: private, provider: iam, operations:[read]}
  ]
)
{
  id: ID!
  name: String!
  shortName: String
  url: AWSURL
}

type Group #部門
@model(timestamps:{createdAt: "createdOn", updatedAt: "updatedOn"})
@auth(
  rules: [
    {allow: groups, groups: ["Admin"]}
    {allow: private, operations: [read]}
    {allow: private, provider: iam, operations:[read]}
  ]
)
{
  id: ID!
  company: Company @connection
  group: Group @connection
  name: String! #部門名
}

type Category
@model(timestamps:{createdAt: "createdOn", updatedAt: "updatedOn"})
@auth(
  rules: [
    {allow: groups, groups: ["Admin"]}
    {allow: private, operations: [read]}
    {allow: private, provider: iam, operations:[read]}
  ]
)
{
  id: ID!
  company: Company @connection
  no: Int
  name: String! #カテゴリ名
}

type Interview
@model(timestamps:{updatedAt: "updatedOn"})
@key(name: "bySheet", fields: ["sheetId"])
@auth(
  rules: [
    { allow: groups, groups: ["Admin"]}
    { allow: owner, ownerField: "reviewee", operations: [read] }
    {allow: private, provider: iam, operations:[read]}
  ]
)
{
  id: ID!
  sheetId: ID
  interviewDate: AWSDate
  detail: String

  reviewee: String #インタビューを受けた人
}

type Sheet
@model(timestamps:{updatedAt: "updatedOn"})
#@key(fields: ["year", "reviewee", "companyId", "grade"])
@auth(
  rules: [
    {allow: owner, ownerField: "reviewee", operations: [read] }
    {allow: groups, groups: ["Admin"]}
    {allow: private, provider: iam}
  ]
)
{
  id: ID!
  year: Int!  #実施年度
  grade: Int! #等級
  careerPlan: String  #キャリア計画本人希望
  careerPlanComment: String #話し合い結果コメント
  reviewComment: String #年間評価コメント
  reviewDate: AWSDate #年間評価実施日時
  selfCheckDate: AWSDate #本人確認（日付）
  firstComment: String #部門長コメント
  firstCheckDate: AWSDate #部門長確認（日付）
  secondCheckDate: AWSDate #所属長確認日付
  overAllEvaluation: Int  #総合評価

  group: Group @connection
  interviews: [Interview] @connection(keyName: "bySheet", fields: ["id"])
  companyId: ID!
  company: Company @connection(fields: ["companyId"])

  reviewee: String #社員ID(被評価者)
}

type Objective
@model(timestamps:{updatedAt: "updatedOn"})
@auth(
  rules: [
    {allow: owner, ownerField: "reviewee" }
    {allow: groups, groups: ["Admin"]}
    # {allow: groups, groups: ["Manager"], operations: [read]}
    {allow: private, provider: iam}
  ]
)
{
  id: ID!
  status: String #ステータス文字列
  content: String! #目標本文
  result: String  #実績
  priority: String #優先順位
  selfEvaluation: Int #自己評価
  firstEvaluation: Int #所属長評価
  lastEvaluation: Int #最終評価

  sheet: Sheet @connection
  category: Category @connection  #カテゴリへのリレーション
  
  reviewee: String #社員ID(被評価者)
}

type Query {
  #listSheetsLtGrade: String @function(name: "listSheetsLtGrade-${env}")
  listSheetsLtGrade: [Sheet] @function(name: "listSheetsLtGrade-${env}")
    @auth(rules:[
      {allow: groups, groups: ["Admin", "Manager"]}
      {allow: private, operations: []}
    ])
}